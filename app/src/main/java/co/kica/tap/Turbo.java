package co.kica.tap;

public class Turbo {

    /*
      Threshold : $0107 (263) clock cycles (TAP byte = $20).
      Bit 0 : $19
      Bit 1 : $28
      Endianess : MSbF
      Pilot byte : $63
      Sync : $64 up to $FF (156 bytes)

      Then... 

      1 byte  : $01
      2 bytes : Start address (LSBF)
      2 bytes : End address (LSBF)
      6 bytes : Stored in zero Page
      n bytes : Data
      1 byte  : Checksum (0 XOR all data bytes) 

      Notes:- 

      There is usually also a sequence of "pre-pilot" bytes, their value is $20.
    */

    public static final int PrePilot = 0x20;
    public static final int PrePilotLength = 600;
    public static final int PilotByte = 0x63;		// leader tone
    public static final int PilotLength = 1400;
    
    public static final byte[] threshold = { (byte)0x07, (byte)0x18, (byte)0xa0 };
    public static final int[] zeroBit 	= { 0x1a, 0x1f, 0x27 };		// zero?
    public static final int[] oneBit 	= { 0x28, 0x31, 0x3d };		// one?
    
    public static final byte[] SixBytes = {
    	(byte) 0xAE,(byte) 0xA7,0,0,0,0
    };
    public static final byte[] SixBytesMoreData = {
    	(byte) 0xAE,(byte) 0xA7,1,0,0,0
    };
    public static final byte[] SixBytesExec = {
    	(byte) 0xAE,(byte) 0xA7,0,1,0,0
    };
    
    public static final byte[] SyncTrain = {
	(byte)0x64,(byte)0x65,(byte)0x66,(byte)0x67,
        (byte)0x68,(byte)0x69,(byte)0x6a,(byte)0x6b,(byte)0x6c,(byte)0x6d,(byte)0x6e,(byte)0x6f,
        (byte)0x70,(byte)0x71,(byte)0x72,(byte)0x73,(byte)0x74,(byte)0x75,(byte)0x76,(byte)0x77,
        (byte)0x78,(byte)0x79,(byte)0x7a,(byte)0x7b,(byte)0x7c,(byte)0x7d,(byte)0x7e,(byte)0x7f,
        (byte)0x80,(byte)0x81,(byte)0x82,(byte)0x83,(byte)0x84,(byte)0x85,(byte)0x86,(byte)0x87,
        (byte)0x88,(byte)0x89,(byte)0x8a,(byte)0x8b,(byte)0x8c,(byte)0x8d,(byte)0x8e,(byte)0x8f,
        (byte)0x90,(byte)0x91,(byte)0x92,(byte)0x93,(byte)0x94,(byte)0x95,(byte)0x96,(byte)0x97,
        (byte)0x98,(byte)0x99,(byte)0x9a,(byte)0x9b,(byte)0x9c,(byte)0x9d,(byte)0x9e,(byte)0x9f,
        (byte)0xa0,(byte)0xa1,(byte)0xa2,(byte)0xa3,(byte)0xa4,(byte)0xa5,(byte)0xa6,(byte)0xa7,
        (byte)0xa8,(byte)0xa9,(byte)0xaa,(byte)0xab,(byte)0xac,(byte)0xad,(byte)0xae,(byte)0xaf,
        (byte)0xb0,(byte)0xb1,(byte)0xb2,(byte)0xb3,(byte)0xb4,(byte)0xb5,(byte)0xb6,(byte)0xb7,
        (byte)0xb8,(byte)0xb9,(byte)0xba,(byte)0xbb,(byte)0xbc,(byte)0xbd,(byte)0xbe,(byte)0xbf,
        (byte)0xc0,(byte)0xc1,(byte)0xc2,(byte)0xc3,(byte)0xc4,(byte)0xc5,(byte)0xc6,(byte)0xc7,
        (byte)0xc8,(byte)0xc9,(byte)0xca,(byte)0xcb,(byte)0xcc,(byte)0xcd,(byte)0xce,(byte)0xcf,
        (byte)0xd0,(byte)0xd1,(byte)0xd2,(byte)0xd3,(byte)0xd4,(byte)0xd5,(byte)0xd6,(byte)0xd7,
        (byte)0xd8,(byte)0xd9,(byte)0xda,(byte)0xdb,(byte)0xdc,(byte)0xdd,(byte)0xde,(byte)0xdf,
        (byte)0xe0,(byte)0xe1,(byte)0xe2,(byte)0xe3,(byte)0xe4,(byte)0xe5,(byte)0xe6,(byte)0xe7,
        (byte)0xe8,(byte)0xe9,(byte)0xea,(byte)0xeb,(byte)0xec,(byte)0xed,(byte)0xee,(byte)0xef,
        (byte)0xf0,(byte)0xf1,(byte)0xf2,(byte)0xf3,(byte)0xf4,(byte)0xf5,(byte)0xf6,(byte)0xf7,
        (byte)0xf8,(byte)0xf9,(byte)0xfa,(byte)0xfb,(byte)0xfc,(byte)0xfd,(byte)0xfe,(byte)0xff
    };

    /* This is data we put in the CBM header block */ 
    public static int threshIndex = 2;
    private static byte[] HeaderCode_033c = {
        (byte)0x78,(byte)0xa9,(byte)0x07,(byte)0x8d,(byte)0x06,(byte)0xdd,(byte)0xa2,(byte)0x01,
        (byte)0x20,(byte)0xd4,(byte)0x02,(byte)0x26,(byte)0xf7,(byte)0xa5,(byte)0xf7,(byte)0xc9,
        (byte)0x63,(byte)0xd0,(byte)0xf5,(byte)0xa0,(byte)0x64,(byte)0x20,(byte)0xe7,(byte)0x03,
        (byte)0xc9,(byte)0x63,(byte)0xf0,(byte)0xf9,(byte)0xc4,(byte)0xf7,(byte)0xd0,(byte)0xe8,
        (byte)0x20,(byte)0xe7,(byte)0x03,(byte)0xc8,(byte)0xd0,(byte)0xf6,(byte)0xc9,(byte)0x00,
        (byte)0xf0,(byte)0xd6,(byte)0x20,(byte)0xe7,(byte)0x03,(byte)0x99,(byte)0x2b,(byte)0x00,
        (byte)0x99,(byte)0xf9,(byte)0x00,(byte)0xc8,(byte)0xc0,(byte)0x0a,(byte)0xd0,(byte)0xf2,
        (byte)0xa0,(byte)0x00,(byte)0x84,(byte)0x90,(byte)0x84,(byte)0x02,(byte)0x20,(byte)0xe7,
        (byte)0x03,(byte)0x91,(byte)0xf9,(byte)0x45,(byte)0x02,(byte)0x85,(byte)0x02,(byte)0xe6,
        (byte)0xf9,(byte)0xd0,(byte)0x02,(byte)0xe6,(byte)0xfa,(byte)0xa5,(byte)0xf9,(byte)0xc5,
        (byte)0x2d,(byte)0xa5,(byte)0xfa,(byte)0xe5,(byte)0x2e,(byte)0x90,(byte)0xe7,(byte)0x20,
        (byte)0xe7,(byte)0x03,(byte)0xc8,(byte)0x84,(byte)0xc0,(byte)0x58,(byte)0x18,(byte)0xa9,
        (byte)0x00,(byte)0x8d,(byte)0xa0,(byte)0x02,(byte)0x20,(byte)0x93,(byte)0xfc,(byte)0x20,
        (byte)0x53,(byte)0xe4,(byte)0xa5,(byte)0xf7,(byte)0x45,(byte)0x02,(byte)0x05,(byte)0x90,
        (byte)0xf0,(byte)0x03,(byte)0x4c,(byte)0xe2,(byte)0xfc,(byte)0xa5,(byte)0x31,(byte)0xf0,
        (byte)0x03,(byte)0x4c,(byte)0xb9,(byte)0x02,(byte)0xa5,(byte)0x32,(byte)0xf0,(byte)0x03,
        (byte)0x6c,(byte)0x2f,(byte)0x00,(byte)0x20,(byte)0x33,(byte)0xa5,(byte)0xa2,(byte)0x03,
        (byte)0x86,(byte)0xc6,(byte)0xbd,(byte)0xf3,(byte)0x02,(byte)0x9d,(byte)0x76,(byte)0x02,
        (byte)0xca,(byte)0xd0,(byte)0xf7,(byte)0x4c,(byte)0xe9,(byte)0x02,(byte)0xa9,(byte)0x07,
        (byte)0x85,(byte)0xf8,(byte)0x20,(byte)0xd4,(byte)0x02,(byte)0x26,(byte)0xf7,(byte)0xce,
        (byte)0x20,(byte)0xd0,(byte)0xc6,(byte)0xf8,(byte)0x10,(byte)0xf4,(byte)0xa5,(byte)0xf7,
        (byte)0x60

    };
    
    public static final byte[] CBMDataBlock_02a7 = {
	    (byte)0xa9,(byte)0x80,(byte)0x05,(byte)0x91,(byte)0x4c,(byte)0xef,(byte)0xf6,(byte)0xa9,
	    (byte)0xa7,(byte)0x78,(byte)0x8d,(byte)0x28,(byte)0x03,(byte)0xa9,(byte)0x02,(byte)0x8d,
	    (byte)0x29,(byte)0x03,(byte)0x58,(byte)0xa0,(byte)0x00,(byte)0x84,(byte)0xc6,(byte)0x84,
	    (byte)0xc0,(byte)0x84,(byte)0x02,(byte)0xad,(byte)0x11,(byte)0xd0,(byte)0x29,(byte)0xef,
	    (byte)0x8d,(byte)0x11,(byte)0xd0,(byte)0xca,(byte)0xd0,(byte)0xfd,(byte)0x88,(byte)0xd0,
	    (byte)0xfa,(byte)0x78,(byte)0x4c,(byte)0x51,(byte)0x03,(byte)0xad,(byte)0x0d,(byte)0xdc,
	    (byte)0x29,(byte)0x10,(byte)0xf0,(byte)0xf9,(byte)0xad,(byte)0x0d,(byte)0xdd,(byte)0x8e,
	    (byte)0x07,(byte)0xdd,(byte)0x4a,(byte)0x4a,(byte)0xa9,(byte)0x19,(byte)0x8d,(byte)0x0f,
	    (byte)0xdd,(byte)0x60,(byte)0x20,(byte)0x8e,(byte)0xa6,(byte)0xa9,(byte)0x00,(byte)0xa8,
	    (byte)0x91,(byte)0x7a,(byte)0x4c,(byte)0x74,(byte)0xa4,(byte)0x52,(byte)0xd5,(byte)0x0d,
	    (byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,
	    (byte)0x00,(byte)0x8b,(byte)0xe3,(byte)0xae,(byte)0x02
    };

    public static final int CBMDataLoadAddress = 0x02A7;
    public static final int CBMDataEndAddress = CBMDataLoadAddress + CBMDataBlock_02a7.length;
    
    public static int zeroVal(int mode) {
      return zeroBit[mode];
    }
    
    public static int oneVal(int mode) {
      return oneBit[mode];
    }
    
    public static byte[] getHeaderBlock(int mode) {
      HeaderCode_033c[threshIndex] = threshold[mode];
      return HeaderCode_033c;
    }
}
